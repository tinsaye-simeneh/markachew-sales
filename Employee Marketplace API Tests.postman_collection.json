{
	"info": {
		"_postman_id": "07b5a056-791b-498e-8ea0-9cbd2e7a7efb",
		"name": "Employee Marketplace API Tests",
		"description": "Postman collection for testing all roles, auth, CRUD, role-based access, with dynamic variables and assertions.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41294772",
		"_collection_link": "https://orange-robot-568778.postman.co/workspace/Employee-Marketplace~7b85cab1-4761-414e-bb20-96fadcf1ea10/collection/41294772-07b5a056-791b-498e-8ea0-9cbd2e7a7efb?action=share&source=collection_link&creator=41294772"
	},
	"item": [
		{
			"name": "Admin Auth",
			"item": [
				{
					"name": "Login Super Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"superAdminAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"superAdminRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{superAdminEmail}}\",\n    \"password\": \"{{superAdminPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superAdminAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{adminEmail}}\",\n    \"password\": \"{{adminPassword}}\",\n    \"role\": \"ADMIN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"adminAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"adminRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{adminEmail}}\",\n    \"password\": \"{{adminPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Admin Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"adminAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"adminRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{adminRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{adminRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Auth",
			"item": [
				{
					"name": "Register Employer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let counter = pm.collectionVariables.get(\"userCounter\") || 1;",
									"const email = \"employer\" + counter + \"@example.com\";",
									"pm.collectionVariables.set(\"currentEmail\", email);",
									"pm.collectionVariables.set(\"employerEmail\", email);",
									"pm.collectionVariables.set(\"userCounter\", ++counter);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"employerAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"employerRefreshToken\", jsonData.data.refreshToken);",
									"pm.collectionVariables.set(\"employerId\", jsonData.data.user.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"Employer Test\",\n    \"phone\": \"1234567890\",\n    \"email\": \"{{currentEmail}}\",\n    \"user_type\": \"EMPLOYER\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"employerAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"employerRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{employerEmail}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Employer Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"employerAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"employerRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{employerRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout Employer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{employerRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Employee",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let counter = pm.collectionVariables.get(\"userCounter\") || 1;",
									"const email = \"employee\" + counter + \"@example.com\";",
									"pm.collectionVariables.set(\"currentEmail\", email);",
									"pm.collectionVariables.set(\"employeeEmail\", email);",
									"pm.collectionVariables.set(\"userCounter\", ++counter);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"employeeAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"employeeRefreshToken\", jsonData.data.refreshToken);",
									"pm.collectionVariables.set(\"employeeId\", jsonData.data.user.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"Employee Test\",\n    \"phone\": \"1234567890\",\n    \"email\": \"{{currentEmail}}\",\n    \"user_type\": \"EMPLOYEE\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"employeeAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"employeeRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{employeeEmail}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Employee Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"employeeAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"employeeRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{employeeRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{employeeRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Seller",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let counter = pm.collectionVariables.get(\"userCounter\") || 1;",
									"const email = \"seller\" + counter + \"@example.com\";",
									"pm.collectionVariables.set(\"currentEmail\", email);",
									"pm.collectionVariables.set(\"sellerEmail\", email);",
									"pm.collectionVariables.set(\"userCounter\", ++counter);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"sellerAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"sellerRefreshToken\", jsonData.data.refreshToken);",
									"pm.collectionVariables.set(\"sellerId\", jsonData.data.user.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"Seller Test\",\n    \"phone\": \"1234567890\",\n    \"email\": \"{{currentEmail}}\",\n    \"user_type\": \"SELLER\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"sellerAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"sellerRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{sellerEmail}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Seller Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"sellerAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"sellerRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{sellerRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{sellerRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Buyer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let counter = pm.collectionVariables.get(\"userCounter\") || 1;",
									"const email = \"buyer\" + counter + \"@example.com\";",
									"pm.collectionVariables.set(\"currentEmail\", email);",
									"pm.collectionVariables.set(\"buyerEmail\", email);",
									"pm.collectionVariables.set(\"userCounter\", ++counter);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"buyerAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"buyerRefreshToken\", jsonData.data.refreshToken);",
									"pm.collectionVariables.set(\"buyerId\", jsonData.data.user.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"Buyer Test\",\n    \"phone\": \"1234567890\",\n    \"email\": \"{{currentEmail}}\",\n    \"user_type\": \"BUYER\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Buyer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"buyerAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"buyerRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{buyerEmail}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Buyer Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"buyerAccessToken\", jsonData.data.accessToken);",
									"pm.collectionVariables.set(\"buyerRefreshToken\", jsonData.data.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{buyerRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout Buyer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{buyerRefreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "User: GET /me (protected) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();",
									"pm.test('status 200', () => pm.response.to.have.status(200));",
									"pm.test('success true', () => pm.expect(json.success).to.be.true);",
									"pm.test('returned user id matches', () => { pm.expect(json.data).to.have.property('id'); pm.expect(json.data.id).to.eql(pm.collectionVariables.get('userId')); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "08 - User: GET /me (no token) should fail Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status 401', () => pm.expect(pm.response.code).to.equal(401));",
									"const json = pm.response.json();",
									"pm.test('success false', () => pm.expect(json.success).to.be.false);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "09 - User: Update (owner) PUT /users/:id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();",
									"pm.test('status 200', () => pm.response.to.have.status(200));",
									"pm.test('success true', () => pm.expect(json.success).to.be.true);",
									"pm.test('name updated', () => pm.expect(json.data.full_name).to.eql('Test User Updated'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"full_name\": \"Test User Updated\",\n  \"password\": \"{{testUserPassword}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 - User: Get all users (paginated) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();",
									"pm.test('status 200', () => pm.response.to.have.status(200));",
									"pm.test('success true', () => pm.expect(json.success).to.be.true);",
									"pm.test('data has users array', () => pm.expect(json.data).to.have.property('users'))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "11 - User: DELETE (owner) DELETE /users/:id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();",
									"pm.test('status 200', () => pm.response.to.have.status(200));",
									"pm.test('success true', () => pm.expect(json.success).to.be.true);",
									"// clear local tokens/ids used in tests",
									"pm.collectionVariables.unset('userToken');",
									"pm.collectionVariables.unset('userId');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"categoryId\", jsonData.data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{sellerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test 2Category\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories/{{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test Category\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/categories/{{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/categories/{{categoryId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Jobs",
			"item": [
				{
					"name": "Create Job (Employer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"jobId\", jsonData.data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Test Job",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Job description",
									"type": "text"
								},
								{
									"key": "requirements",
									"value": "{\"experience\": \"5+ years\", \"skills\": [\"Node.js\", \"SQL\", \"AWS\"]}",
									"type": "text"
								},
								{
									"key": "responsibility",
									"value": "{\"tasks\": [\"API development\", \"Database design\"]}",
									"type": "text"
								},
								{
									"key": "link",
									"value": "https://example.com/apply",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "postman-cloud:///1f04dcdf-6c0f-42c0-a547-c55a8b7dbac6"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/jobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Job (Forbidden - Employee)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Job\",\n    \"description\": \"Job description\",\n    \"requirements\": {},\n    \"responsibility\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/jobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/jobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/jobs/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Job (Employer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Test Job\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/jobs/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Job (Forbidden - Employee)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Test Job\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/jobs/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Job (Employer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/jobs/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Job (Forbidden - Employee)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/jobs/{{jobId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Applications",
			"item": [
				{
					"name": "Create Application (Employee)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"applicationId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{employeeId}}\",\n    \"job_id\": \"{{jobId}}\",\n    \"cover_letter\": \"Test cover letter\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application (Forbidden - Employer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{employeeId}}\",\n    \"job_id\": \"{{jobId}}\",\n    \"cover_letter\": \"Test cover letter\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Applications (Employee - Own)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/applications?user_id={{employeeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{employeeId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/applications/{{applicationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Application (Employee)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cover_letter\": \"Updated cover letter\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/applications/{{applicationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Application (Forbidden - Employer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cover_letter\": \"Updated cover letter\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/applications/{{applicationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Application (Employee)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/applications/{{applicationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Application (Forbidden - Employer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/applications/{{applicationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore Application (Employee)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/applications/{{applicationId}}/restore",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"applications",
								"{{applicationId}}",
								"restore"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Houses",
			"item": [
				{
					"name": "Create House (Seller)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"houseId\", jsonData.data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{sellerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Test House",
									"type": "text"
								},
								{
									"key": "type",
									"value": "SALES",
									"type": "text"
								},
								{
									"key": "price",
									"value": "100000",
									"type": "text"
								},
								{
									"key": "location",
									"value": "Test Location",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "{{categoryId}}",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": [
										"postman-cloud:///1f057719-96dd-4b80-905a-0289725a5b88",
										"postman-cloud:///1f03a597-90fb-4be0-a602-c987db0642c9"
									]
								},
								{
									"key": "video",
									"type": "file",
									"src": "postman-cloud:///1f0923c7-20f1-4710-8c0d-9aae6b89b080"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/houses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"houses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create House (Forbidden - Buyer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test House\",\n    \"type\": \"SALES\",\n    \"price\": 100000,\n    \"location\": \"Test Location\",\n    \"category_id\": \"{{categoryId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/houses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"houses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Houses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/houses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"houses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single House",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/houses/{{houseId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"houses",
								"{{houseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update House (Seller)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{sellerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Test House\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/houses/{{houseId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"houses",
								"{{houseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update House (Forbidden - Buyer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Test House\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/houses/{{houseId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"houses",
								"{{houseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete House (Seller)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{sellerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/houses/{{houseId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"houses",
								"{{houseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete House (Forbidden - Buyer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/houses/{{houseId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"houses",
								"{{houseId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payments",
			"item": [
				{
					"name": "Create Payment (Buyer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"paymentId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipient_id\": \"{{sellerId}}\",\n    \"start_date\": \"2025-09-01\",\n    \"end_date\": \"2025-09-30\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Payment (Forbidden - Seller)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{sellerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipient_id\": \"{{sellerId}}\",\n    \"start_date\": \"2025-09-01\",\n    \"end_date\": \"2025-09-30\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payments (Buyer - Mine)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments?mine=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments"
							],
							"query": [
								{
									"key": "mine",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Payment (Buyer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"ACTIVE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Payment (Forbidden - Seller)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{sellerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"ACTIVE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Payment (Buyer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Payment (Forbidden - Seller)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{sellerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/payments/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"payments",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ratings",
			"item": [
				{
					"name": "Create Rating (Buyer to Seller)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"ratingId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"target_id\": \"{{sellerId}}\",\n    \"role\": \"SELLER\",\n    \"score\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ratings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Rating (Forbidden - Self)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"target_id\": \"{{buyerId}}\",\n    \"role\": \"BUYER\",\n    \"score\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ratings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ratings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/ratings?target_id={{sellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings"
							],
							"query": [
								{
									"key": "target_id",
									"value": "{{sellerId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Rating",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/ratings/{{ratingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings",
								"{{ratingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Rating (Buyer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"score\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ratings/{{ratingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings",
								"{{ratingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Rating (Forbidden - Seller)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{sellerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"score\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/ratings/{{ratingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings",
								"{{ratingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Rating (Buyer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{buyerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/ratings/{{ratingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings",
								"{{ratingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Rating (Forbidden - Seller)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{sellerAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/ratings/{{ratingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ratings",
								"{{ratingId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profiles",
			"item": [
				{
					"name": "Create Profile (Employer)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"profileId\", jsonData.data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{employerId}}\",\n    \"location\": \"Test Location\",\n    \"address\": \"Test Address\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Profile EMPLOYER / SELLER (can upload license)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"profileId\", jsonData.data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employerAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_id",
									"value": "{{employerId}}",
									"type": "text"
								},
								{
									"key": "location",
									"value": "Test Location",
									"type": "text"
								},
								{
									"key": "address",
									"value": "Test Address",
									"type": "text"
								},
								{
									"key": "photo",
									"type": "file",
									"src": "postman-cloud:///1f057719-96dd-4b80-905a-0289725a5b88"
								},
								{
									"key": "document",
									"type": "file",
									"src": "postman-cloud:///1f04dcd1-766c-4190-af3f-9db73cb4937b"
								},
								{
									"key": "license",
									"type": "file",
									"src": "postman-cloud:///1f04dcd1-766c-4190-af3f-9db73cb4937b"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Profile EMPLOYEE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"profileId\", jsonData.data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "user_id",
									"value": "{{employeeId}}",
									"type": "text"
								},
								{
									"key": "location",
									"value": "Test Location",
									"type": "text"
								},
								{
									"key": "address",
									"value": "Test Address",
									"type": "text"
								},
								{
									"key": "photo",
									"type": "file",
									"src": "postman-cloud:///1f057719-96dd-4b80-905a-0289725a5b88"
								},
								{
									"key": "degree",
									"value": "BSc Computer Science",
									"type": "text"
								},
								{
									"key": "department",
									"value": "IT",
									"type": "text"
								},
								{
									"key": "experience",
									"value": "5",
									"type": "text"
								},
								{
									"key": "availability",
									"value": "FULL TIME",
									"type": "text"
								},
								{
									"key": "salary_expectation",
									"value": "10000",
									"type": "text"
								},
								{
									"key": "document",
									"type": "file",
									"src": "postman-cloud:///1f04dcd1-766c-4190-af3f-9db73cb4937b"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Profile EMPLOYEE Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Success is true\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.success).to.be.true; });",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"profileId\", jsonData.data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{employeeAccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/profile/{{employeeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"profile",
								"{{employeeId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Optional: If response is 401, refresh - but manual for now"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000"
		},
		{
			"key": "superAdminEmail",
			"value": "superadmin@example.com"
		},
		{
			"key": "superAdminPassword",
			"value": "password123"
		},
		{
			"key": "adminEmail",
			"value": "admin1@example.com"
		},
		{
			"key": "adminPassword",
			"value": "password123"
		},
		{
			"key": "userCounter",
			"value": "1"
		},
		{
			"key": "currentEmail",
			"value": ""
		},
		{
			"key": "password",
			"value": "password123"
		},
		{
			"key": "superAdminAccessToken",
			"value": ""
		},
		{
			"key": "superAdminRefreshToken",
			"value": ""
		},
		{
			"key": "adminAccessToken",
			"value": ""
		},
		{
			"key": "adminRefreshToken",
			"value": ""
		},
		{
			"key": "employerAccessToken",
			"value": ""
		},
		{
			"key": "employerRefreshToken",
			"value": ""
		},
		{
			"key": "employerId",
			"value": ""
		},
		{
			"key": "employerEmail",
			"value": ""
		},
		{
			"key": "employeeAccessToken",
			"value": ""
		},
		{
			"key": "employeeRefreshToken",
			"value": ""
		},
		{
			"key": "employeeId",
			"value": ""
		},
		{
			"key": "employeeEmail",
			"value": ""
		},
		{
			"key": "sellerAccessToken",
			"value": ""
		},
		{
			"key": "sellerRefreshToken",
			"value": ""
		},
		{
			"key": "sellerId",
			"value": ""
		},
		{
			"key": "sellerEmail",
			"value": ""
		},
		{
			"key": "buyerAccessToken",
			"value": ""
		},
		{
			"key": "buyerRefreshToken",
			"value": ""
		},
		{
			"key": "buyerId",
			"value": ""
		},
		{
			"key": "buyerEmail",
			"value": ""
		},
		{
			"key": "jobId",
			"value": ""
		},
		{
			"key": "applicationId",
			"value": ""
		},
		{
			"key": "categoryId",
			"value": ""
		},
		{
			"key": "houseId",
			"value": ""
		},
		{
			"key": "paymentId",
			"value": ""
		},
		{
			"key": "ratingId",
			"value": ""
		},
		{
			"key": "profileId",
			"value": ""
		}
	]
}